{"encoded_aci":{"contract":{"event":{"variant":[{"QueryCreated":["address","int","bool","string"]},{"OracleCreated":[{"oracle":["string","string"]},"string"]},{"Response":["address",{"oracle_query":["string","string"]},"string"]},{"EditCallBackAddress":["address","bool"]},{"EditOwnerAddress":["address","bool"]}]},"functions":[{"arguments":[],"name":"init","payable":false,"returns":"CalicoOracleConnector.state","stateful":true},{"arguments":[],"name":"createOracle","payable":false,"returns":{"oracle":["string","string"]},"stateful":true},{"arguments":[],"name":"getNextQueryID","payable":false,"returns":"string","stateful":false},{"arguments":[{"name":"args","type":"string"},{"name":"require_callback","type":"bool"}],"name":"query","payable":true,"returns":"string","stateful":true},{"arguments":[],"name":"getIndexOfQueries","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"getNumberOfMyCalls","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"uniq_id","type":"string"}],"name":"getQueryCallerAddress","payable":false,"returns":"address","stateful":false},{"arguments":[],"name":"getWhenExpire","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"uniq_id","type":"string"}],"name":"getRequestedCallBack","payable":false,"returns":"bool","stateful":false},{"arguments":[{"name":"number","type":"int"}],"name":"getQueryUniqIdByNumber","payable":false,"returns":"string","stateful":false},{"arguments":[{"name":"query","type":{"oracle_query":["string","string"]}}],"name":"getQuestionByQuery","payable":false,"returns":"string","stateful":false},{"arguments":[{"name":"new_fee","type":"int"}],"name":"updateBaseFee","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"query_address","type":{"oracle_query":["string","string"]}},{"name":"answer","type":"string"}],"name":"respond","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"addr","type":"address"},{"name":"it_is","type":"bool"}],"name":"editOwnerAddress","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"addr","type":"address"},{"name":"it_is","type":"bool"}],"name":"editCallBackAddress","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"query_id","type":"string"}],"name":"getAnswerByQueryUniqId","payable":false,"returns":{"option":["string"]},"stateful":false},{"arguments":[{"name":"query_address","type":{"oracle_query":["string","string"]}}],"name":"getAnswerByQueryAddress","payable":false,"returns":{"option":["string"]},"stateful":false},{"arguments":[{"name":"query_id","type":"string"}],"name":"getQueryByQueryUniqId","payable":false,"returns":{"option":[{"oracle_query":["string","string"]}]},"stateful":false},{"arguments":[{"name":"send_to","type":"address"},{"name":"amount","type":"int"}],"name":"withdrawFunds","payable":false,"returns":"bool","stateful":true},{"arguments":[],"name":"getBaseFee","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"getOracle","payable":false,"returns":{"oracle":["string","string"]},"stateful":false},{"arguments":[{"name":"caller","type":"address"}],"name":"canCallBack","payable":false,"returns":"bool","stateful":false},{"arguments":[],"name":"getCurrentContractBalance","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"contractAddress","payable":false,"returns":"address","stateful":false}],"kind":"contract_main","name":"CalicoOracleConnector","payable":false,"state":{"record":[{"name":"source_oracle","type":{"oracle":["string","string"]}},{"name":"reqc","type":{"map":["address","int"]}},{"name":"index_of_queries","type":"int"},{"name":"map_of_queries","type":{"map":["int","string"]}},{"name":"callback_addresses","type":{"map":["address","bool"]}},{"name":"owners","type":{"map":["address","bool"]}},{"name":"queries","type":{"map":["string",{"oracle_query":["string","string"]}]}},{"name":"query_caller","type":{"map":["string","address"]}},{"name":"requested_callback","type":{"map":["string","bool"]}},{"name":"base_fee","type":"int"},{"name":"ttl","type":"int"},{"name":"qttl","type":"int"},{"name":"rttl","type":"int"}]},"type_defs":[]}},"external_encoded_aci":[{"namespace":{"name":"ListInternal","type_defs":[]}},{"namespace":{"name":"List","type_defs":[]}},{"namespace":{"name":"String","type_defs":[]}}],"interface":"\n\n\nmain contract CalicoOracleConnector =\n  record state = {source_oracle : oracle(string, string),reqc : map(address, int),index_of_queries : int,map_of_queries : map(int, string),callback_addresses : map(address, bool),owners : map(address, bool),queries : map(string, oracle_query(string, string)),query_caller : map(string, address),requested_callback : map(string, bool),base_fee : int,ttl : int,qttl : int,rttl : int}\n  datatype event = QueryCreated(address, int, bool, string) | OracleCreated(oracle(string, string), string) | Response(address, oracle_query(string, string), string) | EditCallBackAddress(address, bool) | EditOwnerAddress(address, bool)\n  stateful entrypoint init : () => CalicoOracleConnector.state\n  stateful entrypoint createOracle : () => oracle(string, string)\n  entrypoint getNextQueryID : () => string\n  payable stateful entrypoint query : (string, bool) => string\n  entrypoint getIndexOfQueries : () => int\n  entrypoint getNumberOfMyCalls : () => int\n  entrypoint getQueryCallerAddress : (string) => address\n  entrypoint getWhenExpire : () => int\n  entrypoint getRequestedCallBack : (string) => bool\n  entrypoint getQueryUniqIdByNumber : (int) => string\n  entrypoint getQuestionByQuery : (oracle_query(string, string)) => string\n  stateful entrypoint updateBaseFee : (int) => unit\n  stateful entrypoint respond : (oracle_query(string, string), string) => bool\n  stateful entrypoint editOwnerAddress : (address, bool) => bool\n  stateful entrypoint editCallBackAddress : (address, bool) => bool\n  entrypoint getAnswerByQueryUniqId : (string) => option(string)\n  entrypoint getAnswerByQueryAddress : (oracle_query(string, string)) => option(string)\n  entrypoint getQueryByQueryUniqId : (string) => option(oracle_query(string, string))\n  stateful entrypoint withdrawFunds : (address, int) => bool\n  entrypoint getBaseFee : () => int\n  entrypoint getOracle : () => oracle(string, string)\n  entrypoint canCallBack : (address) => bool\n  entrypoint getCurrentContractBalance : () => int\n  entrypoint contractAddress : () => address\n"}